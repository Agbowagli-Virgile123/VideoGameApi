// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameApi.Data;

#nullable disable

namespace VideoGameApi.Migrations
{
    [DbContext(typeof(VideoGameDbContext))]
    [Migration("20250830151818_AddRefreshtoken")]
    partial class AddRefreshtoken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreVideoGame", b =>
                {
                    b.Property<string>("GenresId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VideoGamesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GenresId", "VideoGamesId");

                    b.HasIndex("VideoGamesId");

                    b.ToTable("GenreVideoGame");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.Developer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developer");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.Publisher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.VideoGame", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeveloperId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("PublisherId");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Platform = "Nintendo Switch",
                            Title = "The Legend of Zelda: Breath of the Wild"
                        },
                        new
                        {
                            Id = "2",
                            Platform = "PlayStation 4",
                            Title = "God of War"
                        },
                        new
                        {
                            Id = "3",
                            Platform = "Xbox Series X/S",
                            Title = "Halo Infinite"
                        },
                        new
                        {
                            Id = "4",
                            Platform = "Nintendo Switch",
                            Title = "Super Mario Odyssey"
                        },
                        new
                        {
                            Id = "5",
                            Platform = "PC, PlayStation 4, Xbox One, Nintendo Switch",
                            Title = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            Id = "6",
                            Platform = "PlayStation 4",
                            Title = "Final Fantasy VII Remake"
                        },
                        new
                        {
                            Id = "7",
                            Platform = "Nintendo Switch",
                            Title = "Animal Crossing: New Horizons"
                        });
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.VideoGameDetails", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoGameId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId")
                        .IsUnique()
                        .HasFilter("[VideoGameId] IS NOT NULL");

                    b.ToTable("VideoGameDetails");
                });

            modelBuilder.Entity("GenreVideoGame", b =>
                {
                    b.HasOne("VideoGameApi.Models.DatabaseModels.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameApi.Models.DatabaseModels.VideoGame", null)
                        .WithMany()
                        .HasForeignKey("VideoGamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.VideoGame", b =>
                {
                    b.HasOne("VideoGameApi.Models.DatabaseModels.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId");

                    b.HasOne("VideoGameApi.Models.DatabaseModels.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");

                    b.Navigation("Developer");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.VideoGameDetails", b =>
                {
                    b.HasOne("VideoGameApi.Models.DatabaseModels.VideoGame", null)
                        .WithOne("VideoGameDetails")
                        .HasForeignKey("VideoGameApi.Models.DatabaseModels.VideoGameDetails", "VideoGameId");
                });

            modelBuilder.Entity("VideoGameApi.Models.DatabaseModels.VideoGame", b =>
                {
                    b.Navigation("VideoGameDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
